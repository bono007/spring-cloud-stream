spring:
  cloud:
    stream:
      function:
        definition: supplier;receiveAndForward;receive
      # this default config avoids having to set the property on every binding (see commented section below)
      default:
        producer:
          use-native-encoding: true
        consumer:
          use-native-encoding: true
      bindings:
        supplier-out-0:
          destination: sensor-1
#          producer:
#            use-native-encoding: true
        receiveAndForward-in-0:
          destination: sensor-1
#          consumer:
#            use-native-decoding: true
        sensor-out-0:
          destination: sensor-2
#          producer:
#            use-native-encoding: true
        receive-in-0:
          destination: sensor-2
#          consumer:
#            use-native-decoding: true

      output-bindings: sensor # streamBridge (ie sensor-out-0)
      poller.fixed-delay: 10000

      kafka:
        binder:
          configuration:
            schema.registry.url: http://localhost:8081
        # this default config avoids having to set the extended properties on every binding (see commented section below)
        default:
          producer:
            configuration:
              value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
              schema.registry.url: http://localhost:8081
          consumer:
            configuration:
              value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
              schema.registry.url: http://localhost:8081
              specific.avro.reader: true
#        bindings:
#          supplier-out-0:
#            producer:
#              configuration:
#                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#                schema.registry.url: http://localhost:8081
#          receiveAndForward-in-0:
#            consumer:
#              configuration:
#                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#                schema.registry.url: http://localhost:8081
#                specific.avro.reader: true
#          sensor-out-0:
#            producer:
#              configuration:
#                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#                schema.registry.url: http://localhost:8081
#          receive-in-0:
#            consumer:
#              configuration:
#                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#                schema.registry.url: http://localhost:8081
#                specific.avro.reader: true

server.port: 9999
